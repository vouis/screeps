{"version":3,"file":"main.js","sources":["../src/global.js","../src/role/role.harvester.js","../src/role/role.upgrader.js","../src/role/role.builder.js","../src/role/role.transfer.js","../src/role/role.transfer2.js","../src/role/role.transtorage.js","../src/config.creep.js","../src/proto/creep.js","../src/proto/spawn.js","../src/main.js"],"sourcesContent":["const getBody = (body) => {\n    const newBody = []\n    while (body.WORK) {\n        newBody.push(WORK)\n        body.WORK--;\n    }\n    while (body.CARRY) {\n        newBody.push(CARRY)\n        body.CARRY--;\n    }\n    while (body.MOVE) {\n        newBody.push(MOVE)\n        body.MOVE--;\n    }\n    while (body.CLAIM) {\n        newBody.push(CLAIM)\n        body.CLAIM--;\n    }\n    return newBody\n}\n\nexport const roles = {\n    harvester: { number: 0, type: 'move550' },\n    tranfer: { number: 0, type: 'work550' },\n    tranfer2: { number: 0, type: 'work550' },\n    repairer: { number: 0, type: 'base300' },\n    upgrader: { number: 0, type: 'move550' },\n    builder: { number: 0, type: 'move550' },\n};\n// BODYPART_COST: {\n//     \"move\": 50,\n//         \"work\": 100,\n//         \"attack\": 80,\n//         \"carry\": 50,\n//         \"heal\": 250,\n//         \"ranged_attack\": 150,\n//         \"tough\": 10,\n//         \"claim\": 600\n// },\nexport const body = {\n    base: getBody({ WORK: 1, CARRY: 1, MOVE: 1 }), //200\n    base300: getBody({ WORK: 2, CARRY: 1, MOVE: 1 }), //300\n    work550: getBody({ WORK: 4, CARRY: 1, MOVE: 1 }), //550\n    move550: getBody({ WORK: 1, CARRY: 4, MOVE: 5 }), //550\n    base600: getBody({ WORK: 2, CARRY: 3, MOVE: 5 }),//600\n    work600: getBody({ WORK: 4, CARRY: 1, MOVE: 3 }), //600\n    trans800: getBody({ WORK: 6, CARRY: 0, MOVE: 3 }),//600\n    base800: getBody({ WORK: 4, CARRY: 4, MOVE: 4 }),//800\n    carry800: getBody({ WORK: 1, CARRY: 8, MOVE: 5 }),//800\n    claim: getBody({ CLAIM: 1, MOVE: 1 }),// 650\n}\n\n// construct\nexport const spawnName = 'Spawn1'\nexport const towerId = '606496df680e4ac68b2d8ccd'\nexport const storageId = '6067b156cea495591213b0ea'\n\nexport const controller_North = Game.getObjectById('5bbcad0e9099fc012e6368bd')\n\n\n\nexport const container_1 = '606545e6a4e2a38c708728ed'\nexport const container_2 = '60653e74e6f7f835e1474818'\nexport const container_North = null\n\nexport const source_North = '5bbcad0e9099fc012e6368bc'\nexport const source_1 = '5bbcad0e9099fc012e6368bf'\nexport const source_2 = '5bbcad0e9099fc012e6368c0'\n\nexport const find_source = function (creep, sourceId) {\n    const source = Game.getObjectById(sourceId);\n    if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\n        creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\n    }\n}\n\nexport const find_container_trans = function (creep, sourceId, structureId) {\n    const source = Game.getObjectById(sourceId);\n    const structure = Game.getObjectById(structureId);\n    if (JSON.stringify(structure.pos) !== JSON.stringify(creep.pos) &&\n        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffffff' } });\n    } else {\n        if (structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n            creep.harvest(source)\n        }\n\n    }\n}\n\nexport const find_structure = function (creep, structure) {\n    if (creep.withdraw(Game.getObjectById(structure), RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n        creep.moveTo(Game.getObjectById(structure), { visualizePathStyle: { stroke: '#ffaa00' } });\n    }\n}\n\nexport const find_structure_or_source = function (creep, sourceId, structureId1, structureId2) {\n    const structure1 = Game.getObjectById(structureId1);\n    const structure2 = Game.getObjectById(structureId2);\n    const source = Game.getObjectById(sourceId);\n    if (creep.withdraw(structure1, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE && structure1.store[RESOURCE_ENERGY] != 0) {\n\n        creep.moveTo(structure1, { visualizePathStyle: { stroke: '#ffaa00' } });\n    } else if (source.energy) {\n        find_source(creep, sourceId)\n    }\n    else if (structure2 && creep.withdraw(structure2, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE && structure2.store[RESOURCE_ENERGY] != 0) {\n        creep.moveTo(structure2, { visualizePathStyle: { stroke: '#ffaa00' } });\n    }\n}\n\nexport const moveto_Target = function (creep) {\n    const tower = Game.getObjectById(towerId)\n    const storage = Game.getObjectById(storageId)\n    var targets = creep.room.find(FIND_STRUCTURES, {\n        filter: (structure) => {\n            return (structure.structureType == STRUCTURE_EXTENSION ||\n                structure.structureType == STRUCTURE_SPAWN) &&\n                structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\n        }\n    });\n    if (tower && tower.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        targets.push(tower)\n    }\n\n    if (storage && storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        targets.push(storage)\n    }\n    if (targets.length > 0) {\n\n        if (creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\n        }\n    } else {\n        const controller = creep.room.controller\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\n    }\n}\n\nexport const to_structure = function (creep, structureId) {\n    const structure = Game.getObjectById(structureId);\n    if (JSON.stringify(structure.pos) !== JSON.stringify(creep.pos) &&\n        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\n        creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffffff' } });\n    } else {\n        creep.transfer(structure, RESOURCE_ENERGY)\n    }\n}\n\nexport const find_building = function (creep) {\n    var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\n    if (targets.length) {\n        if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\n        }\n    } else {\n        const controller = creep.room.controller\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\n    }\n}\n\nexport const to_destroy_building = function (creep) {\n    var targets = creep.room.find(FIND_STRUCTURES, {\n        filter: (targets) => targets.hits < targets.hitsMax\n    });\n    targets.sort((a, b) => a.hits - b.hits);\n    if (targets.length) {\n        if (creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\n            creep.say('repair');\n        }\n    }\n}\n\nexport const tower_action = function () {\n    const tower = Game.getObjectById(towerId)\n    if (tower) {\n        const closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\n        if (closestHostile) {\n            tower.attack(closestHostile);\n        } else {\n            var closestDamagedStructure = tower.pos.findClosestByRange(FIND_STRUCTURES, {\n                filter: (structure) => structure.hits < structure.hitsMax && structure.structureType !== STRUCTURE_WALL\n            });\n            if (closestDamagedStructure) {\n                tower.repair(closestDamagedStructure);\n            }\n        }\n\n    }\n}\n","import { container_1, find_structure_or_source, source_1, moveto_Target, storageId } from \"../global\";\n\n\n\nconst harvester = () => ({\n    source: creep => {\n        find_structure_or_source(creep, source_1, container_1, storageId)\n    },\n    target: creep => {\n        moveto_Target(creep);\n    },\n    switch: creep => creep.updateState()\n})\n\nexport default harvester;","import { container_2, find_structure_or_source, source_2 } from \"../global\";\n\nconst roleUpgrader = () => ({\n    source: creep => {\n        find_structure_or_source(creep, source_2, container_2)\n    },\n    target: creep => {\n        const controller = creep.room.controller\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\n    },\n    switch: creep => creep.updateState()\n})\n\nexport default roleUpgrader;","import {container_2, find_building, find_structure_or_source, source_2} from \"../global\";\n\nconst roleBuilder= () => ({\n    // 采集能量矿\n    source: creep => {\n        find_structure_or_source(creep,source_2,container_2)\n    },\n    // 升级控制器\n    target: creep => {\n        find_building(creep);\n    },\n    // 状态切换条件，稍后会给出具体实现\n    switch: creep => creep.updateState()\n})\n\nexport default roleBuilder;","import {\n    container_1,\n    find_container_trans,\n    source_1,\n} from \"../global\";\n\nconst roleTransfer= () => ({\n    target: creep => {\n        find_container_trans(creep,source_1,container_1)\n    },\n})\n\nexport default roleTransfer;","import {\n    container_2,\n    find_container_trans,\n    source_2,\n} from \"../global\";\n\nconst roleTransfer2= () => ({\n    target: creep => {\n        find_container_trans(creep,source_2,container_2)\n    },\n    switch: creep => creep.updateState()\n})\n\nexport default roleTransfer2;","import { container_2, find_structure_or_source, source_2, storageId } from \"../global\";\r\n\r\nconst roleTranstorage = () => ({\r\n    source: creep => {\r\n        find_structure_or_source(creep, source_2, container_2)\r\n    },\r\n    target: creep => {\r\n        const storage = Game.getObjectById(storageId)\r\n        if (storage && storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n            if (creep.transfer(storage, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(storage, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n        }\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleTranstorage;","import harvester from './role/role.harvester'\nimport upgrader from './role/role.upgrader'\nimport builder from './role/role.builder'\nimport transfer from './role/role.transfer'\nimport transfer2 from './role/role.transfer2'\nimport transtorage from './role/role.transtorage'\nimport otherRoom from './role/role.otherRoom'\nimport claimer from './role/role.claimer'\nimport transferN from './role/role.otherRoomTransfer'\nexport default {\n    harvester1: harvester(),\n    harvester2: harvester(),\n    upgrader1: upgrader(),\n    upgrader2: upgrader(),\n    upgrader3: upgrader(),\n    upgrader4: upgrader(),\n    builder1: builder(),\n    builder2: builder(),\n    transfer1_1: transfer(),\n    transfer2_1: transfer2(),\n    transtorage1: transtorage(),\n    // north room\n    // otherRoom1:otherRoom(),\n    // otherRoom2:otherRoom(),\n    // claimer1:claimer(),\n    // transferN1:transferN()\n\n}\n\n// 注意修改其中的 spawn 名称 work550:getBody({WORK:4,CARRY:1,MOVE:1}),\n// Game.spawns.Spawn1.spawnCreep([MOVE,MOVE,MOVE,WORK,WORK,WORK,WORK,WORK,WORK,CARRY], 'transferN1', { memory: { role: 'transferN1' }})\n\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'harvester2', { memory: { role: 'harvester2' } })\n\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK], 'transfer1_1', { memory: { role: 'transfer1_1' } })\n\n\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK], 'transfer2_1', { memory: { role: 'transfer2_1' } })\n\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'upgrader1', { memory: { role: 'upgrader1' } })\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'upgrader2', { memory: { role: 'upgrader2' } })\n\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'builder1', { memory: { role: 'builder1' } })\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'builder2', { memory: { role: 'builder2' } })\n\n//Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'transtorage1', { memory: { role: 'transtorage1' } })","// 引入 creep 配置项\nimport creepConfigs from '../config.creep.js'\n\nCreep.prototype.work = function()\n{\n    // 检查 creep 内存中的角色是否存在\n    if (!(this.memory.role in creepConfigs)) {\n        console.log(`creep ${this.name} 内存属性 role 不属于任何已存在的 creepConfigs 名称`)\n        return\n    }\n    // 获取对应配置项\n    const creepConfig = creepConfigs[this.memory.role]\n\n    // 获取是否工作\n    const working = creepConfig.switch ? creepConfig.switch(this) : true\n\n    // 执行对应操作\n    if (working) {\n        if (creepConfig.target) creepConfig.target(this)\n    }\n    else {\n        if (creepConfig.source) creepConfig.source(this)\n    }\n}\n\nCreep.prototype.updateState = function()\n{\n    // creep 身上没有能量 && creep 之前的状态为“工作”\n    if(this.store[RESOURCE_ENERGY] <= 0 && this.memory.working) {\n        this.memory.working = false\n    }\n    // creep 身上能量满了 && creep 之前的状态为“不工作”\n    if(this.store[RESOURCE_ENERGY] >= this.store.getCapacity() && !this.memory.working) {\n        this.memory.working = true\n    }\n\n    return this.memory.working\n}\n","import { body } from '../global';\n\nSpawn.prototype.work = function () {\n    // 自己已经在生成了 / 内存里没有生成队列 / 生产队列为空 就啥都不干\n    if (this.spawning || !this.memory.spawnList || this.memory.spawnList.length == 0) return\n    // 进行生成\n    const spawnSuccess = this.mainSpawn(this.memory.spawnList[0])\n    // 生成成功后移除任务\n    if (spawnSuccess) this.memory.spawnList.shift()\n}\n\n\nSpawn.prototype.addTask = function (taskName) {\n    // 任务加入队列\n    if (this.memory.spawnList === undefined) {\n        this.memory.spawnList = []\n    }\n    this.memory.spawnList.push(taskName)\n    return this.memory.spawnList.length\n}\n\nSpawn.prototype.mainSpawn = function (taskName) {\n    let newBody = body.base800;\n    if (taskName.includes('harvester') || taskName.includes('transtorage')) {\n        newBody = body.carry800\n    }\n    else if (taskName.includes('transfer')) {\n        newBody = body.trans800\n    }\n    else if (taskName.includes('claimer')) {\n        newBody = body.claim\n    }\n    // upgrader,builder\n    const value = Game.spawns.Spawn1.spawnCreep(newBody, taskName, { memory: { role: taskName } })\n    if (value === 0) return true\n    return false\n}","import { spawnName, tower_action, roles, body } from './global'\nimport './proto/creep'\nimport './proto/spawn'\nimport creepList from './config.creep'\n\n\nconst getName = (role) => {\n    return role + Game.time;\n}\n\nvar createCreeps = function (role, type) {\n    Game.spawns[spawnName].spawnCreep(body[type], role,\n        { memory: { role: role } });\n}\n\n\nmodule.exports.loop = function () {\n    var role = {\n        total: _.filter(Game.creeps),\n        harvester: _.filter(Game.creeps, (creep) => creep.memory.role == 'harvester' || creep.memory.role == 'harvester1' || creep.memory.role == 'harvester2'),\n        builder: _.filter(Game.creeps, (creep) => creep.memory.role == 'builder' || creep.memory.role == 'builder1' || creep.memory.role == 'builder2'),\n        upgrader: _.filter(Game.creeps, (creep) => creep.memory.role == 'upgrader' || creep.memory.role == 'upgrader1' || creep.memory.role == 'upgrader2'),\n        tranfer: _.filter(Game.creeps, (creep) => creep.memory.role == 'tranfer' || creep.memory.role == 'transfer1_1' || creep.memory.role == 'transfer1_2'\n            || creep.memory.role == 'transfer2_1' || creep.memory.role == 'transfer2_2'),\n        tranfer2: _.filter(Game.creeps, (creep) => creep.memory.role == 'tranfer2'),\n        repairer: _.filter(Game.creeps, (creep) => creep.memory.role == 'repairer')\n    }\n    for (var name in Memory.creeps) {\n        if (!Game.creeps[name]) {\n            for (let key in creepList) {\n                if (name === key) {\n                    Game.spawns[spawnName].addTask(name);\n                }\n            }\n            delete Memory.creeps[name];\n        }\n    }\n\n    Game.spawns[spawnName].work();\n\n    if (role.harvester.length < 1) {\n        console.log('Spawning new harvester: ');\n        createCreeps('harvester1', 'base')\n    }\n    for (let i in roles) {\n        if (role[i].length < roles[i].number) {\n            console.log(role[i].length, 'Spawning new ', i);\n            createCreeps(i, roles[i].type)\n            break;\n        }\n    }\n\n\n    if (Game.spawns[spawnName].spawning) {\n        var spawningCreep = Game.creeps[Game.spawns[spawnName].spawning.name];\n        Game.spawns[spawnName].room.visual.text(\n            '🛠️' + spawningCreep.memory.role,\n            Game.spawns[spawnName].pos.x + 1,\n            Game.spawns[spawnName].pos.y,\n            { align: 'left', opacity: 0.8 });\n    }\n\n    tower_action()\n\n    for (const name in Game.creeps) {\n        const creep = Game.creeps[name];\n        creep.work();\n    }\n}\n"],"names":["upgrader","builder","transfer","transfer2","transtorage","creepConfigs"],"mappings":"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"}