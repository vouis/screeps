{"version":3,"file":"main.js","sources":["../src/global.js","../src/role/role.harvester.js","../src/role/role.upgrader.js","../src/role/role.builder.js","../src/role/role.transfer.js","../src/role/role.transfer2.js","../src/config.creep.js","../src/proto/creep.js","../src/proto/spawn.js","../src/main.js"],"sourcesContent":["const getBody = (body) =>{\r\n    const newBody = []\r\n    while(body.WORK){\r\n        newBody.push(WORK)\r\n        body.WORK--;\r\n    }\r\n    while(body.CARRY){\r\n        newBody.push(CARRY)\r\n        body.CARRY--;\r\n    }\r\n    while(body.MOVE){\r\n        newBody.push(MOVE)\r\n        body.MOVE--;\r\n    }\r\n    while(body.CLAIM){\r\n        newBody.push(CLAIM)\r\n        body.CLAIM--;\r\n    }\r\n    return newBody\r\n}\r\n\r\nexport const roles = {\r\n    harvester: {number:0,type:'move550'},\r\n    tranfer: {number:0,type:'work550'},\r\n    tranfer2: {number:0,type:'work550'},\r\n    repairer: {number:0,type:'base300'},\r\n    upgrader: {number:0,type:'move550'},\r\n    builder: {number:0,type:'move550'},\r\n};\r\n// BODYPART_COST: {\r\n//     \"move\": 50,\r\n//         \"work\": 100,\r\n//         \"attack\": 80,\r\n//         \"carry\": 50,\r\n//         \"heal\": 250,\r\n//         \"ranged_attack\": 150,\r\n//         \"tough\": 10,\r\n//         \"claim\": 600\r\n// },\r\nexport const body = {\r\n    base:getBody({WORK:1,CARRY:1,MOVE:1}), //200\r\n    base300:getBody({WORK:2,CARRY:1,MOVE:1}), //300\r\n    work550:getBody({WORK:4,CARRY:1,MOVE:1}), //550\r\n    move550:getBody({WORK:1,CARRY:4,MOVE:5}), //550\r\n    base600:getBody({WORK:2,CARRY:3,MOVE:5}),//600\r\n    work600:getBody({WORK:4,CARRY:1,MOVE:3}), //600\r\n    trans800:getBody({WORK:6,CARRY:0,MOVE:3}),//600\r\n    base800:getBody({WORK:4,CARRY:4,MOVE:4}),//800\r\n    carry800:getBody({WORK:1,CARRY:8,MOVE:5}),//800\r\n    claim:getBody({CLAIM:1,MOVE:1}),// 650\r\n}\r\n\r\n// construct\r\nexport const spawnName = 'Spawn1'\r\nexport const towerId ='606496df680e4ac68b2d8ccd'\r\nexport const storage =null\r\n\r\nexport const controller_North = Game.getObjectById('5bbcad0e9099fc012e6368bd')\r\n\r\n\r\n\r\nexport const container_1 = '606545e6a4e2a38c708728ed'\r\nexport const container_2 = '60653e74e6f7f835e1474818'\r\nexport const container_North = null\r\n\r\nexport const source_North = '5bbcad0e9099fc012e6368bc'\r\nexport const source_1 = '5bbcad0e9099fc012e6368bf'\r\nexport const source_2 = '5bbcad0e9099fc012e6368c0'\r\n\r\nexport const find_source = function (creep,sourceId) {\r\n    const source = Game.getObjectById(sourceId);\r\n    if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    }\r\n}\r\n\r\nexport const find_container_trans = function (creep,sourceId,structureId) {\r\n    const source = Game.getObjectById(sourceId);\r\n    const structure = Game.getObjectById(structureId);\r\n    if (JSON.stringify(structure.pos)!==JSON.stringify(creep.pos)&&\r\n        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n        creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    }else{\r\n        creep.harvest(source)\r\n\r\n    }\r\n}\r\n\r\nexport const find_structure= function (creep,structure) {\r\n    if (creep.withdraw(Game.getObjectById(structure), RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(Game.getObjectById(structure), { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    }\r\n}\r\n\r\nexport const find_structure_or_source = function (creep,sourceId,structureId) {\r\n    const structure = Game.getObjectById(structureId);\r\n    if (creep.withdraw(structure, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE && structure.store[RESOURCE_ENERGY] != 0) {\r\n\r\n        creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    } else {\r\n        find_source(creep,sourceId)\r\n    }\r\n}\r\n\r\nexport const moveto_Target = function (creep) {\r\n    const tower = Game.getObjectById(towerId)\r\n    var targets = creep.room.find(FIND_STRUCTURES, {\r\n        filter: (structure) => {\r\n            return (structure.structureType == STRUCTURE_EXTENSION ||\r\n                structure.structureType == STRUCTURE_SPAWN) &&\r\n                structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n        }\r\n    });\r\n    if (tower && tower.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n        targets.push(tower)\r\n    }\r\n    if (storage && storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n        targets.push(storage)\r\n    }\r\n    if (targets.length > 0) {\r\n\r\n        if (creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n\r\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n    }else{\r\n        const controller = creep.room.controller\r\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\r\n    }\r\n}\r\n\r\nexport const to_structure = function (creep,structureId) {\r\n    const structure = Game.getObjectById(structureId);\r\n        if (JSON.stringify(structure.pos)!==JSON.stringify(creep.pos)&&\r\n            structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n            creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }else{\r\n            creep.transfer(structure, RESOURCE_ENERGY)\r\n        }\r\n}\r\n\r\nexport const find_building = function (creep) {\r\n    var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\r\n    if (targets.length) {\r\n        if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n    } else {\r\n        const controller = creep.room.controller\r\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\r\n    }\r\n}\r\n\r\nexport const to_destroy_building = function (creep) {\r\n    var targets = creep.room.find(FIND_STRUCTURES, {\r\n        filter: (targets) => targets.hits < targets.hitsMax\r\n    });\r\n    targets.sort((a, b) => a.hits - b.hits);\r\n    if (targets.length) {\r\n        if (creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\r\n            creep.say('repair');\r\n        }\r\n    }\r\n}\r\n\r\nexport const tower_action = function(){\r\n    const tower = Game.getObjectById(towerId)\r\n    if (tower) {\r\n        var closestDamagedStructure = tower.pos.findClosestByRange(FIND_STRUCTURES, {\r\n            filter: (structure) => structure.hits < structure.hitsMax&&structure.structureType !== STRUCTURE_WALL\r\n        });\r\n        if (closestDamagedStructure) {\r\n            tower.repair(closestDamagedStructure);\r\n        }\r\n\r\n        const closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\r\n        if (closestHostile) {\r\n            tower.attack(closestHostile);\r\n        }\r\n    }\r\n}\r\n","import {container_1, find_structure_or_source, source_1, moveto_Target} from \"../global\";\r\n\r\n\r\n\r\nconst harvester= () => ({\r\n    source: creep => {\r\n        find_structure_or_source(creep, source_1, container_1)\r\n    },\r\n    target: creep => {\r\n        moveto_Target(creep);\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default harvester;","import {container_2, find_structure_or_source, source_2} from \"../global\";\r\n\r\nconst roleUpgrader= () => ({\r\n    source: creep => {\r\n        find_structure_or_source(creep,source_2,container_2)\r\n    },\r\n    target: creep => {\r\n        const controller = creep.room.controller\r\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleUpgrader;","import {container_2, find_building, find_structure_or_source, source_2} from \"../global\";\r\n\r\nconst roleBuilder= () => ({\r\n    // 采集能量矿\r\n    source: creep => {\r\n        find_structure_or_source(creep,source_2,container_2)\r\n    },\r\n    // 升级控制器\r\n    target: creep => {\r\n        find_building(creep);\r\n    },\r\n    // 状态切换条件，稍后会给出具体实现\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleBuilder;","import {\r\n    container_1,\r\n    find_container_trans,\r\n    source_1,\r\n} from \"../global\";\r\n\r\nconst roleTransfer= () => ({\r\n    target: creep => {\r\n        find_container_trans(creep,source_1,container_1)\r\n    },\r\n})\r\n\r\nexport default roleTransfer;","import {\r\n    container_2,\r\n    find_container_trans,\r\n    source_2,\r\n} from \"../global\";\r\n\r\nconst roleTransfer2= () => ({\r\n    target: creep => {\r\n        find_container_trans(creep,source_2,container_2)\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleTransfer2;","import harvester from './role/role.harvester'\r\nimport upgrader from './role/role.upgrader'\r\nimport builder from './role/role.builder'\r\nimport transfer from './role/role.transfer'\r\nimport transfer2 from './role/role.transfer2'\r\nimport otherRoom from './role/role.otherRoom'\r\nimport claimer from './role/role.claimer'\r\nimport transferN from './role/role.otherRoomTransfer'\r\nexport default {\r\n    harvester1: harvester(),\r\n    harvester2: harvester(),\r\n    upgrader1: upgrader(),\r\n    upgrader2:upgrader(),\r\n    upgrader3:upgrader(),\r\n    upgrader4:upgrader(),\r\n    builder1:builder(),\r\n    builder2:builder(),\r\n    transfer1_1:transfer(),\r\n    // transfer1_2:transfer(),\r\n    transfer2_1:transfer2(),\r\n    // transfer2_2:transfer2(),\r\n    // north room\r\n    // otherRoom1:otherRoom(),\r\n    // otherRoom2:otherRoom(),\r\n    // claimer1:claimer(),\r\n    // transferN1:transferN()\r\n\r\n}\r\n\r\n// 注意修改其中的 spawn 名称 work550:getBody({WORK:4,CARRY:1,MOVE:1}),\r\n// Game.spawns.Spawn1.spawnCreep([MOVE,MOVE,MOVE,WORK,WORK,WORK,WORK,WORK,WORK,CARRY], 'transferN1', { memory: { role: 'transferN1' }})","// 引入 creep 配置项\r\nimport creepConfigs from '../config.creep.js'\r\n\r\nCreep.prototype.work = function()\r\n{\r\n    // 检查 creep 内存中的角色是否存在\r\n    if (!(this.memory.role in creepConfigs)) {\r\n        console.log(`creep ${this.name} 内存属性 role 不属于任何已存在的 creepConfigs 名称`)\r\n        return\r\n    }\r\n    // 获取对应配置项\r\n    const creepConfig = creepConfigs[this.memory.role]\r\n\r\n    // 获取是否工作\r\n    const working = creepConfig.switch ? creepConfig.switch(this) : true\r\n\r\n    // 执行对应操作\r\n    if (working) {\r\n        if (creepConfig.target) creepConfig.target(this)\r\n    }\r\n    else {\r\n        if (creepConfig.source) creepConfig.source(this)\r\n    }\r\n}\r\n\r\nCreep.prototype.updateState = function()\r\n{\r\n    // creep 身上没有能量 && creep 之前的状态为“工作”\r\n    if(this.store[RESOURCE_ENERGY] <= 0 && this.memory.working) {\r\n        this.memory.working = false\r\n    }\r\n    // creep 身上能量满了 && creep 之前的状态为“不工作”\r\n    if(this.store[RESOURCE_ENERGY] >= this.store.getCapacity() && !this.memory.working) {\r\n        this.memory.working = true\r\n    }\r\n\r\n    return this.memory.working\r\n}\r\n","import {body} from '../global';\r\n\r\nSpawn.prototype.work = function() {\r\n    // 自己已经在生成了 / 内存里没有生成队列 / 生产队列为空 就啥都不干\r\n    if (this.spawning || !this.memory.spawnList || this.memory.spawnList.length == 0) return\r\n    // 进行生成\r\n    const spawnSuccess = this.mainSpawn(this.memory.spawnList[0])\r\n    // 生成成功后移除任务\r\n    if (spawnSuccess) this.memory.spawnList.shift()\r\n}\r\n\r\n\r\nSpawn.prototype.addTask = function(taskName) {\r\n    // 任务加入队列\r\n    if(this.memory.spawnList===undefined){\r\n        this.memory.spawnList = []\r\n    }\r\n    this.memory.spawnList.push(taskName)\r\n    return this.memory.spawnList.length\r\n}\r\n\r\nSpawn.prototype.mainSpawn = function(taskName) {\r\n   let newBody = body.base800;\r\n    if(taskName.includes('harvester')){\r\n        newBody = body.carry800\r\n    }\r\n    else if(taskName.includes('transfer')){\r\n        newBody = body.trans800\r\n    }\r\n    else if(taskName.includes('claimer')){\r\n        newBody = body.claim\r\n    }\r\n    // upgrader,builder\r\n    const value = Game.spawns.Spawn1.spawnCreep(newBody, taskName, { memory: { role: taskName }})\r\n    if(value===0) return true\r\n    return false\r\n}","import {spawnName,tower_action,roles,body} from './global'\r\nimport './proto/creep'\r\nimport './proto/spawn'\r\nimport creepList from './config.creep'\r\n\r\n\r\nconst getName = (role) =>{\r\n    return role + Game.time;\r\n}\r\n\r\nvar createCreeps = function (role,type) {\r\n    Game.spawns[spawnName].spawnCreep(body[type], getName(role),\r\n        { memory: { role: role } });\r\n}\r\n\r\n\r\nmodule.exports.loop = function () {\r\n    var role = {\r\n        total: _.filter(Game.creeps),\r\n        harvester: _.filter(Game.creeps, (creep) => creep.memory.role == 'harvester'||creep.memory.role == 'harvester1'||creep.memory.role == 'harvester2'),\r\n        builder: _.filter(Game.creeps, (creep) => creep.memory.role == 'builder'||creep.memory.role == 'builder1'||creep.memory.role == 'builder2'),\r\n        upgrader: _.filter(Game.creeps, (creep) => creep.memory.role == 'upgrader'||creep.memory.role == 'upgrader1'||creep.memory.role == 'upgrader2'),\r\n        tranfer: _.filter(Game.creeps, (creep) => creep.memory.role == 'tranfer'||creep.memory.role == 'transfer1_1'||creep.memory.role == 'transfer1_2'\r\n            ||creep.memory.role == 'transfer2_1'||creep.memory.role == 'transfer2_2'),\r\n        tranfer2: _.filter(Game.creeps, (creep) => creep.memory.role == 'tranfer2'),\r\n        repairer: _.filter(Game.creeps, (creep) => creep.memory.role == 'repairer')\r\n    }\r\n    for (var name in Memory.creeps) {\r\n        if (!Game.creeps[name]) {\r\n            for(let key in creepList){\r\n                if(name === key){\r\n                    Game.spawns[spawnName].addTask(name);\r\n                }\r\n            }\r\n            delete Memory.creeps[name];\r\n        }\r\n    }\r\n\r\n    Game.spawns[spawnName].work();\r\n\r\n    if (role.harvester.length < 1) {\r\n        console.log('Spawning new harvester: ');\r\n        createCreeps('harvester','base')\r\n    }\r\n    for(let i in roles){\r\n        if(role[i].length<roles[i].number){\r\n            console.log(role[i].length, 'Spawning new ',i);\r\n            createCreeps(i,roles[i].type)\r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n    if (Game.spawns[spawnName].spawning) {\r\n        var spawningCreep = Game.creeps[Game.spawns[spawnName].spawning.name];\r\n        Game.spawns[spawnName].room.visual.text(\r\n            '🛠️' + spawningCreep.memory.role,\r\n            Game.spawns[spawnName].pos.x + 1,\r\n            Game.spawns[spawnName].pos.y,\r\n            { align: 'left', opacity: 0.8 });\r\n    }\r\n\r\n    tower_action()\r\n\r\n    for (const name in Game.creeps) {\r\n        const creep = Game.creeps[name];\r\n            creep.work();\r\n    }\r\n}\r\n"],"names":["upgrader","builder","transfer","transfer2","creepConfigs"],"mappings":"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"}