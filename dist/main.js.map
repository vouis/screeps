{"version":3,"file":"main.js","sources":["../src/global.js","../src/role/role.harvester.js","../src/role/role.upgrader.js","../src/role/role.builder.js","../src/role/role.transfer.js","../src/role/link/role.transfer2.js","../src/role/role.transtorage.js","../src/role/role.NorthRoomRepair.js","../src/role/northRoomCarry.js","../src/role/role.claimer.js","../src/role/role.northRoomTransfer.js","../src/role/link/role.link2storage.js","../src/role/miner/role.miner.js","../src/role/miner/role.transferMiner.js","../src/config.creep.js","../src/proto/creep.js","../src/proto/spawn.js","../src/proto/structures/link.js","../src/stateScanner/index.js","../src/main.js"],"sourcesContent":["const getBody = (body) => {\r\n    const newBody = []\r\n    while (body.WORK) {\r\n        newBody.push(WORK)\r\n        body.WORK--;\r\n    }\r\n    while (body.CARRY) {\r\n        newBody.push(CARRY)\r\n        body.CARRY--;\r\n    }\r\n    while (body.MOVE) {\r\n        newBody.push(MOVE)\r\n        body.MOVE--;\r\n    }\r\n    while (body.CLAIM) {\r\n        newBody.push(CLAIM)\r\n        body.CLAIM--;\r\n    }\r\n    return newBody\r\n}\r\n\r\nexport const roles = {\r\n    harvester: { number: 0, type: 'move550' },\r\n    tranfer: { number: 0, type: 'work550' },\r\n    tranfer2: { number: 0, type: 'work550' },\r\n    repairer: { number: 0, type: 'base300' },\r\n    upgrader: { number: 0, type: 'move550' },\r\n    builder: { number: 0, type: 'move550' },\r\n};\r\n// BODYPART_COST: {\r\n//     \"move\": 50,\r\n//         \"work\": 100,\r\n//         \"attack\": 80,\r\n//         \"carry\": 50,\r\n//         \"heal\": 250,\r\n//         \"ranged_attack\": 150,\r\n//         \"tough\": 10,\r\n//         \"claim\": 600\r\n// },\r\nexport const body = {\r\n    base: getBody({ WORK: 1, CARRY: 1, MOVE: 1 }), //200\r\n    trans:getBody({ WORK: 7, CARRY: 2, MOVE: 2 }), //300\r\n    carry:getBody({  CARRY: 2, MOVE: 1 }), //300\r\n    base300: getBody({ WORK: 2, CARRY: 1, MOVE: 1 }), //300\r\n    work550: getBody({ WORK: 4, CARRY: 1, MOVE: 1 }), //550\r\n    move550: getBody({ WORK: 1, CARRY: 4, MOVE: 5 }), //550\r\n    base600: getBody({ WORK: 2, CARRY: 3, MOVE: 5 }),//600\r\n    work600: getBody({ WORK: 4, CARRY: 1, MOVE: 3 }), //600\r\n    trans800: getBody({ WORK: 6, CARRY: 0, MOVE: 3 }),//600\r\n    base800: getBody({ WORK: 4, CARRY: 4, MOVE: 4 }),//800\r\n    carry800: getBody({ WORK: 1, CARRY: 8, MOVE: 5 }),//800\r\n    upBu1300: getBody({ WORK: 5, CARRY: 9, MOVE: 7 }),//1300\r\n    walking: getBody({ WORK: 1, CARRY: 19, MOVE: 5 }),//1300\r\n    claim: getBody({ CLAIM: 2, MOVE: 2 }),// 650\r\n    up:getBody({ WORK: 2, CARRY: 1, MOVE: 2 }),\r\n}\r\n\r\n// construct\r\n//Game.spawns['Spawn1']\r\nexport const spawnName = 'Spawn1'\r\nexport const towerId = '606496df680e4ac68b2d8ccd'\r\nexport const towerId2 = '606a07304d24f06a9f242bee'\r\nexport const storageId = '6067b156cea495591213b0ea'\r\nexport const link2Id = '606bce9496af2a2cda7c90cf'\r\nexport const linkCenter = '606bd2642bb56187e6ba3e6a'\r\nexport const linkUpgraderId = '606ff0d769a76c41fb47d1d6'\r\n\r\nexport const controller_North = Game.getObjectById('5bbcad0e9099fc012e6368bd')\r\n\r\n\r\n\r\nexport const container_1 = '606545e6a4e2a38c708728ed'\r\nexport const container_2 = '60653e74e6f7f835e1474818'\r\nexport const container_North = '606fcba3c084396e28cc61a4'\r\n\r\nexport const source_North = '5bbcad0e9099fc012e6368bc'\r\nexport const source_1 = '5bbcad0e9099fc012e6368bf'\r\nexport const source_2 = '5bbcad0e9099fc012e6368c0'\r\n\r\nexport const mineral = '5bbcb2e440062e4259e93ea4'\r\nexport const container_mineral = null\r\n\r\nexport const decayTime = 1500\r\n\r\nexport const find_source = function (creep, sourceId) {\r\n    const source = Game.getObjectById(sourceId);\r\n    if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    }\r\n}\r\nexport const storageEnough = () =>{\r\n    const storage = Game.getObjectById(storageId)\r\n    if (storage && storage.store[RESOURCE_ENERGY] > 10000){\r\n        return true\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nexport const find_container_trans = function (creep, sourceId, structureId) {\r\n    const source = Game.getObjectById(sourceId);\r\n    const structure = Game.getObjectById(structureId);\r\n    if (structure&&JSON.stringify(structure.pos) !== JSON.stringify(creep.pos)) { // 走到container上面\r\n        creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    } else {\r\n        if (structure&&structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n            creep.harvest(source)\r\n        }\r\n    }\r\n}\r\n\r\nexport const find_structure = function (creep, structure) {\r\n    if (creep.withdraw(Game.getObjectById(structure), RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n        creep.moveTo(Game.getObjectById(structure), { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    }\r\n}\r\n\r\nexport const find_structure_or_source = function (creep, sourceId, structureId, storageId) {\r\n    const structure = Game.getObjectById(structureId);\r\n    const storage = Game.getObjectById(storageId);\r\n    const source = Game.getObjectById(sourceId)\r\n    if (storage && creep.withdraw(storage, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE && storage.store[RESOURCE_ENERGY] != 0) {\r\n        creep.moveTo(storage, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    }\r\n    else if (creep.withdraw(structure, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE && structure.store[RESOURCE_ENERGY] != 0) {\r\n\r\n        creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n    } else if (source.energy) {\r\n        find_source(creep, sourceId)\r\n    }\r\n}\r\n\r\nexport const moveto_Target = function (creep) {\r\n    const tower = Game.getObjectById(towerId)\r\n    const tower2 = Game.getObjectById(towerId2)\r\n    var targets = creep.room.find(FIND_STRUCTURES, {\r\n        filter: (structure) => {\r\n            return (structure.structureType == STRUCTURE_EXTENSION ||\r\n                structure.structureType == STRUCTURE_SPAWN) &&\r\n                structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0;\r\n        }\r\n    });\r\n    if (tower && tower.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n        targets.push(tower)\r\n    }\r\n    if (tower2 && tower2.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n        targets.push(tower2)\r\n    }\r\n    if (targets.length > 0) {\r\n\r\n        if (creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n\r\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n    }\r\n}\r\n\r\nexport const to_structure = function (creep, structureId) {\r\n    const structure = Game.getObjectById(structureId);\r\n    if (JSON.stringify(structure.pos) !== JSON.stringify(creep.pos) &&\r\n        structure.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n        creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffffff' } });\r\n    } else {\r\n        creep.transfer(structure, RESOURCE_ENERGY)\r\n    }\r\n}\r\n\r\nexport const find_building = function (creep, isUpgrade) {\r\n    var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\r\n    if (targets.length) {\r\n        if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\r\n        }\r\n        return true;\r\n    } else {\r\n        if (isUpgrade) {\r\n            const controller = creep.room.controller\r\n            if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const to_destroy_building = function (creep) {\r\n    var targets = creep.room.find(FIND_STRUCTURES, {\r\n        filter: (targets) => targets.hits < targets.hitsMax && targets.structureType !== STRUCTURE_WALL\r\n    });\r\n    targets.sort((a, b) => a.hits - b.hits);\r\n    if (targets.length) {\r\n        if (creep.repair(targets[0]) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(targets[0], { visualizePathStyle: { stroke: '#ffffff' } });\r\n            creep.say('repair');\r\n        }\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const tower_action = function () {\r\n    const tower = Game.getObjectById(towerId)\r\n    const tower2 = Game.getObjectById(towerId2)\r\n    if (tower) {\r\n        const closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\r\n        if (closestHostile) {\r\n            tower.attack(closestHostile);\r\n        } else {\r\n            var closestDamagedStructure = tower.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                filter: (structure) => structure.hits < structure.hitsMax && structure.structureType !== STRUCTURE_WALL\r\n            });\r\n            if (closestDamagedStructure) {\r\n                tower.repair(closestDamagedStructure);\r\n            }\r\n        }\r\n    }\r\n    if (tower2) {\r\n        const closestHostile = tower2.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\r\n        if (closestHostile) {\r\n            tower2.attack(closestHostile);\r\n        } else {\r\n            var closestDamagedStructure = tower2.pos.findClosestByRange(FIND_STRUCTURES, {\r\n                filter: (structure) => structure.hits < structure.hitsMax && structure.structureType !== STRUCTURE_WALL\r\n            });\r\n            if (closestDamagedStructure) {\r\n                tower2.repair(closestDamagedStructure);\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","import { container_1, find_structure_or_source, source_1, moveto_Target, storageId } from \"../global\";\r\n\r\n\r\n\r\nconst harvester = () => ({\r\n    source: creep => {\r\n        find_structure_or_source(creep, source_1, container_1, storageId)\r\n    },\r\n    target: creep => {\r\n        moveto_Target(creep);\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default harvester;","import { container_2, find_structure_or_source, source_2, storageId,linkUpgraderId,find_source } from \"../global\";\r\n\r\nconst roleUpgrader = () => ({\r\n    source: creep => {\r\n        const linkUpgrader = Game.getObjectById(linkUpgraderId)\r\n        if(linkUpgrader&&linkUpgrader.energy>0){\r\n            if (creep.withdraw(linkUpgrader, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(linkUpgrader, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n            }\r\n        }else{\r\n            creep.say('等待能量传输!');\r\n            //find_structure_or_source(creep, source_2, container_2, storageId)\r\n        }\r\n    },\r\n    target: creep => {\r\n        const controller = creep.room.controller\r\n        if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE) creep.moveTo(controller)\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleUpgrader;","import { container_2, find_building, find_structure_or_source, source_2, storageId,storageEnough } from \"../global\";\r\n\r\nconst roleBuilder = () => ({\r\n\r\n    source: creep => {\r\n        if(storageEnough()){\r\n            find_structure_or_source(creep, source_2, container_2, storageId)\r\n        }else{\r\n            creep.say('能量不太够!😨');\r\n        }\r\n    },\r\n\r\n    target: creep => {\r\n        find_building(creep, true);\r\n    },\r\n\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleBuilder;","import {\r\n    container_1,\r\n    find_container_trans,\r\n    source_1,\r\n} from \"../global\";\r\n\r\nconst roleTransfer= () => ({\r\n    target: creep => {\r\n        find_container_trans(creep,source_1,container_1)\r\n    },\r\n})\r\n\r\nexport default roleTransfer;","import {\r\n    link2Id,\r\n    linkCenter,\r\n    container_2,\r\n    find_container_trans, find_structure_or_source, source_1,\r\n    source_2, storageId,\r\n} from \"../../global\";\r\n\r\nconst roleTransfer2= () => ({\r\n    source: creep => {\r\n        const source = Game.getObjectById(source_2);\r\n        const structure = Game.getObjectById(container_2);\r\n        if (JSON.stringify(structure.pos) !== JSON.stringify(creep.pos)) { // 走到container上面\r\n            creep.moveTo(structure, { visualizePathStyle: { stroke: '#ffffff' } });\r\n        } else if(creep.store[RESOURCE_ENERGY] < creep.store.getCapacity()){\r\n            if(source.energy>0){\r\n                creep.harvest(source)\r\n            }else if(structure.store[RESOURCE_ENERGY] != 0){\r\n                creep.withdraw(structure, RESOURCE_ENERGY)\r\n            }\r\n        }\r\n    },\r\n    target: creep => {\r\n        const link = Game.getObjectById(link2Id)\r\n\r\n        // if(link.cooldown===0&&link.energy>=600){\r\n        //     link.transferEnergy(Game.getObjectById(linkCenter), link.energy);\r\n        // }\r\n        if (link && link.store.getFreeCapacity(RESOURCE_ENERGY) > 50) {\r\n            if (creep.transfer(link, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(link, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n        }else{\r\n            if (Game.getObjectById(container_2).store.getFreeCapacity(RESOURCE_ENERGY) > 50) {\r\n                creep.transfer(container_2, RESOURCE_ENERGY)\r\n            }\r\n        }\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleTransfer2;","import { container_1, find_structure_or_source, source_1, storageId } from \"../global\";\r\n\r\nconst roleTranstorage = () => ({\r\n    source: creep => {\r\n        const target = creep.pos.findClosestByRange(FIND_DROPPED_RESOURCES);\r\n        if (target&&target.energy>250) {\r\n            if (creep.pickup(target) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(target);\r\n            }\r\n        } else {\r\n            find_structure_or_source(creep, source_1, container_1)\r\n        }\r\n\r\n    },\r\n    target: creep => {\r\n        const storage = Game.getObjectById(storageId)\r\n        if (storage && storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n            if (creep.transfer(storage, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(storage, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n        }\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleTranstorage;","import {\r\n    find_building,\r\n    find_structure_or_source,\r\n    to_destroy_building,\r\n    source_North,\r\n    container_North,\r\n    decayTime, source_1, container_1,\r\n} from \"../global\";\r\n\r\nconst northRoomRepair = () => ({\r\n    source: creep => {\r\n            const target = creep.pos.findClosestByRange(FIND_DROPPED_RESOURCES);\r\n            if (target&&target.energy) {\r\n                if (creep.pickup(target) == ERR_NOT_IN_RANGE) {\r\n                    creep.moveTo(target);\r\n                }\r\n            } else {\r\n                find_structure_or_source(creep, source_North, container_North)\r\n        }\r\n    },\r\n    target: creep => {\r\n        if (to_destroy_building(creep)) { return; }\r\n        if (find_building(creep, false)) { return; };\r\n    },\r\n    switch: creep => creep.updateState(),\r\n    otherRoom:'E2S34'\r\n})\r\n\r\nexport default northRoomRepair;","import {\r\n    find_building,\r\n    find_structure_or_source,\r\n    source_North,\r\n    container_North,\r\n    storageId,\r\n    decayTime,\r\n} from \"../global\";\r\n\r\nconst northRoomCarry = () => ({\r\n    source: creep => {\r\n            find_structure_or_source(creep, source_North, container_North)\r\n    },\r\n    target: creep => {\r\n        // if (find_building(creep, false)) { return; };\r\n        const storage = Game.getObjectById(storageId)\r\n        if (storage && storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n            if (creep.transfer(storage, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(storage, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n        }\r\n    },\r\n    switch: creep => creep.updateState(),\r\n    otherRoom:'E2S34'\r\n})\r\n\r\nexport default northRoomCarry;","import {\r\n    controller_North,\r\n    towerId,\r\n    decayTime\r\n} from \"../global\";\r\n\r\n\r\nconst roleClaimer = () => ({\r\n    target: creep => {\r\n            if (creep.reserveController(controller_North) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(controller_North);\r\n            }\r\n\r\n    },\r\n    otherRoom:'E2S34',\r\n})\r\n\r\nexport default roleClaimer;","import {\r\n    find_container_trans,\r\n    container_North,\r\n    source_North,\r\n} from \"../global\";\r\n\r\nconst roleTransferN = () => ({\r\n    target: creep => {\r\n            find_container_trans(creep, source_North, container_North)\r\n    },\r\n    otherRoom:'E2S34'\r\n\r\n})\r\n\r\nexport default roleTransferN;","import {storageId, linkCenter} from \"../../global\";\r\n\r\nconst roleLink2storage = () => ({\r\n    source: creep => {\r\n        // if(Memory.taskList.length)\r\n        const link = Game.getObjectById(linkCenter)\r\n        if (creep.withdraw(link, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n            creep.moveTo(link, { visualizePathStyle: { stroke: '#ffaa00' } });\r\n        }\r\n    },\r\n    target: creep => {\r\n        const storage = Game.getObjectById(storageId)\r\n        if (storage && storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n            if (creep.transfer(storage, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(storage, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n        }\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default roleLink2storage;","import {container_mineral, find_structure_or_source, mineral, storageId} from \"../../global\";\r\n\r\n\r\n\r\nconst harvester = () => ({\r\n    source: creep => {\r\n        find_structure_or_source(creep, mineral, container_mineral)\r\n    },\r\n    target: creep => {\r\n        const storage = Game.getObjectById(storageId)\r\n        if (storage && storage.store.getFreeCapacity(RESOURCE_ENERGY) > 0) {\r\n            if (creep.transfer(storage, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(storage, { visualizePathStyle: { stroke: '#ffffff' } });\r\n            }\r\n        }\r\n    },\r\n    switch: creep => creep.updateState()\r\n})\r\n\r\nexport default harvester;","import {\r\n    container_mineral,\r\n    find_container_trans,\r\n    mineral,\r\n} from \"../../global\";\r\n\r\nconst roleTransfer= () => ({\r\n    target: creep => {\r\n        find_container_trans(creep,mineral,container_mineral)\r\n    },\r\n})\r\n\r\nexport default roleTransfer;","import harvester from './role/role.harvester'\r\nimport upgrader from './role/role.upgrader'\r\nimport builder from './role/role.builder'\r\nimport transfer from './role/role.transfer'\r\nimport transfer2 from './role/link/role.transfer2'\r\nimport transtorage from './role/role.transtorage'\r\nimport transtorage2 from './role/role.transtorage2'\r\nimport northRoomRepair from './role/role.NorthRoomRepair'\r\nimport northRoomCarry from './role/northRoomCarry'\r\nimport claimer from './role/role.claimer'\r\nimport transferN from './role/role.northRoomTransfer'\r\nimport attacker from './role/attack/role.attack'\r\nimport roleLink2storage from './role/link/role.link2storage'\r\nimport miner from './role/miner/role.miner'\r\nimport transferMiner from './role/miner/role.transferMiner'\r\nexport default {\r\n    harvester1: harvester(),\r\n    harvester2: harvester(),\r\n    upgrader1: upgrader(),\r\n    // upgrader2: upgrader(),\r\n    // upgrader3: upgrader(),\r\n    // upgrader4: upgrader(),\r\n    builder1: builder(),\r\n    builder2: builder(),\r\n    transfer1_1: transfer(),\r\n    transfer2_1: transfer2(),\r\n    transtorage1_1: transtorage(),\r\n    link2Storage: roleLink2storage(),\r\n\r\n    // miner\r\n    minerToStorage1:miner(),\r\n    transferMiner:transferMiner(),\r\n\r\n    // north room\r\n\r\n    northRoomRepair: northRoomRepair(),\r\n    northRoomCarry1: northRoomCarry(),\r\n    northRoomCarry2: northRoomCarry(),\r\n    claimerN: claimer(),\r\n    transferN: transferN(),\r\n\r\n    // attack\r\n    // attacker:attacker()\r\n\r\n}\r\n\r\n// 注意修改其中的 spawn 名称 work550:getBody({WORK:4,CARRY:1,MOVE:1}),\r\n// Game.spawns.Spawn1.spawnCreep([MOVE,MOVE,MOVE,MOVE,WORK,WORK,WORK,WORK,CARRY,CARRY,CARRY,CARRY], 'northRoom2', { memory: { role: 'northRoom2' }})\r\n\r\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'harvester2', { memory: { role: 'harvester2' } })\r\n\r\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK], 'transfer1_1', { memory: { role: 'transfer1_1' } })\r\n\r\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK,CARRY,WORK], 'transfer2_1', { memory: { role: 'transfer2_1' } })\r\n\r\n// Game.spawns.Spawn1.spawnCreep([MOVE,MOVE, WORK, WORK,CARRY], 'upgrader1', { memory: { role: 'upgrader1' } })\r\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'upgrader2', { memory: { role: 'upgrader2' } })\r\n\r\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'builder1', { memory: { role: 'builder1' } })\r\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'builder2', { memory: { role: 'builder2' } })\r\n\r\n//Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'transtorage1_1', { memory: { role: 'transtorage1_1' } })\r\n//Game.spawns.Spawn1.spawnCreep([MOVE, CARRY, CARRY], 'link2Storage', { memory: { role: 'link2Storage' } })\r\n\r\n//Game.spawns.Spawn1.spawnCreep([CLAIM, MOVE], 'claimerN', { memory: { role: 'claimerN' } })\r\n// Game.spawns.Spawn1.spawnCreep([MOVE, WORK], 'transferN', { memory: { role: 'transferN' } })\r\n\r\n//Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'northRoomCarry1', { memory: { role: 'northRoomCarry1' } })\r\n//Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'northRoomCarry2', { memory: { role: 'northRoomCarry2' } })\r\n//Game.spawns.Spawn1.spawnCreep([MOVE, WORK, CARRY], 'northRoomRepair', { memory: { role: 'northRoomRepair' } })\r\n\r\n//Game.spawns.Spawn1.spawnCreep([MOVE, CLAIM, MOVE,CLAIM], 'attacker', { memory: { role: 'attacker' } })\r\n\r\n","// 引入 creep 配置项\r\nimport creepConfigs from '../config.creep.js'\r\nimport {decayTime} from \"../global\";\r\n\r\nCreep.prototype.work = function() {\r\n    // 检查 creep 内存中的角色是否存在\r\n    if (!(this.memory.role in creepConfigs)) {\r\n        console.log(`creep ${this.name} 内存属性 role 不属于任何已存在的 creepConfigs 名称`)\r\n        return\r\n    }\r\n    // 获取对应配置项\r\n    const creepConfig = creepConfigs[this.memory.role]\r\n\r\n    // 获取是否工作\r\n    const working = creepConfig.switch ? creepConfig.switch(this) : true\r\n\r\n    // 执行对应操作\r\n    if (working) {\r\n        if (creepConfig.target&&creepConfig.otherRoom){\r\n            this.avoid(creepConfig.otherRoom,creepConfig.target)\r\n        }\r\n        else {creepConfig.target(this)}\r\n    }\r\n    else {\r\n        if (creepConfig.source&&creepConfig.otherRoom){\r\n            this.avoid(creepConfig.otherRoom,creepConfig.source)\r\n        }else{\r\n            creepConfig.source(this)\r\n        }\r\n    }\r\n}\r\n\r\nCreep.prototype.avoid = function(roomString,fn){\r\n    const room = Game.rooms[roomString]\r\n    if (!Memory.invader) {\r\n        Memory.invader = {};\r\n        Memory.invader[roomString] = 0\r\n    }\r\n    if (room && room.find(FIND_HOSTILE_CREEPS).length) { // 遇到invader计时，往出生点跑\r\n        if (Memory.invader[roomString] + decayTime < Game.time) { //不在侵略时间段，记录开始时间\r\n            Memory.invader[roomString] = Game.time;\r\n        }\r\n        this.moveTo(new RoomPosition(9, 2, 'E2S35'))\r\n    } else if (Memory.invader[roomString] + decayTime > Game.time) { //在侵略时间段\r\n        this.moveTo(new RoomPosition(9, 2, 'E2S35'))\r\n    }\r\n    else if (!room && Memory.invader[roomString] + decayTime < Game.time) { //没视野，不被侵略\r\n        this.moveTo(new RoomPosition(20, 36, roomString))\r\n    } else if (Memory.invader[roomString] + decayTime < Game.time) { //当前不在侵略时间段\r\n        fn(this)\r\n    }\r\n\r\n}\r\n\r\nCreep.prototype.updateState = function()\r\n{\r\n    // creep 身上没有能量 && creep 之前的状态为“工作”\r\n    if(this.store[RESOURCE_ENERGY] <= 0 && this.memory.working) {\r\n        this.memory.working = false\r\n    }\r\n    // creep 身上能量满了 && creep 之前的状态为“不工作”\r\n    if(this.store[RESOURCE_ENERGY] >= this.store.getCapacity() && !this.memory.working) {\r\n        this.memory.working = true\r\n    }\r\n\r\n    return this.memory.working\r\n}\r\n","import { body,controller_North } from '../global';\r\n\r\nSpawn.prototype.work = function () {\r\n    // 自己已经在生成了 / 内存里没有生成队列 / 生产队列为空 就啥都不干\r\n    if (this.spawning || !this.memory.spawnList || this.memory.spawnList.length == 0) return\r\n    // 进行生成\r\n    const spawnSuccess = this.mainSpawn(this.memory.spawnList[0])\r\n    // 生成成功后移除任务\r\n    if (spawnSuccess) this.memory.spawnList.shift()\r\n}\r\n\r\n\r\nSpawn.prototype.addTask = function (taskName) {\r\n    // 任务加入队列\r\n    if (this.memory.spawnList === undefined) {\r\n        this.memory.spawnList = []\r\n    }\r\n\r\n    // 去重\r\n    for(let existName in Memory.creeps){\r\n        if(taskName===existName){\r\n            return this.memory.spawnList.length\r\n        }\r\n    }\r\n\r\n    // 额外自动添加creep\r\n\r\n\r\n    // 外矿claimer生成时间控制,每个CLAIM大概500次,5000为上限，时间够了不生成\r\n    if(taskName.includes('claimer')){\r\n        if(controller_North.reservation.ticksToEnd > 3000){\r\n            return;\r\n        }\r\n    }else{\r\n        let hasClaimer = false\r\n        // 没有claimer时，生成\r\n        for(let existName in Memory.creeps){\r\n            if('claimerN'===existName){\r\n                hasClaimer=true\r\n            }\r\n        }\r\n        if(this.memory.spawnList.find(e=>e==='claimerN')){\r\n            hasClaimer=true\r\n        }\r\n\r\n        if(!hasClaimer&&(!controller_North.reservation||controller_North.reservation.ticksToEnd < 1000)){\r\n            this.memory.spawnList.push('claimerN')\r\n        }\r\n    }\r\n\r\n    // 优先级处理\r\n    if(taskName.includes('harvester')){\r\n        this.memory.spawnList.splice(0, 0, taskName)\r\n    }else{\r\n        this.memory.spawnList.push(taskName)\r\n    }\r\n    return this.memory.spawnList.length\r\n}\r\n\r\nSpawn.prototype.mainSpawn = function (taskName) {\r\n    let newBody = body.upBu1300;\r\n    if (taskName.includes('transtorage') || taskName.includes('northRoomCarry')) {\r\n        newBody = body.walking\r\n    }\r\n    if (taskName.includes('harvester')||taskName.includes('minerToStorage')) {\r\n        newBody = body.carry800\r\n    }\r\n    else if (taskName.includes('transfer')) {\r\n        newBody = body.trans\r\n    }\r\n    else if (taskName.includes('claimer')||taskName.includes('attacker')) {\r\n        newBody = body.claim\r\n    }\r\n    else if(taskName.includes('link2Storage')){\r\n        newBody = body.carry\r\n    }else if(taskName.includes('upgrader')){\r\n        newBody = body.up\r\n    }\r\n    // upgrader,builder\r\n    const value = Game.spawns.Spawn1.spawnCreep(newBody, taskName, { memory: { role: taskName } })\r\n    if (value === 0) return true\r\n    return false\r\n}","import {linkCenter, linkUpgraderId, storageId,storageEnough} from \"../../global\";\r\n\r\nStructureLink.prototype.work = function(){\r\n\r\n    if (this.cooldown != 0) return\r\n\r\n    if (this.store.getUsedCapacity(RESOURCE_ENERGY) < 700) return\r\n    if(!this.room.memory.sourceLink2Id){\r\n        this.room.memory.sourceLink2Id='606bce9496af2a2cda7c90cf'\r\n    }\r\n\r\n    // 发送给 upgrader 和center\r\n    if (this.room.memory.sourceLink2Id&& this.room.memory.sourceLink2Id === this.id) {\r\n        const link = Game.getObjectById(this.room.memory.sourceLink2Id)\r\n        const linkUpgrader = Game.getObjectById(linkUpgraderId)\r\n        if(link.cooldown===0) {\r\n            if (storageEnough() && linkUpgrader.energy <100) {\r\n                link.transferEnergy(linkUpgrader, 700);\r\n            } else {\r\n                link.transferEnergy(Game.getObjectById(linkCenter), link.energy);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}","export default function () {\r\n    // 每 20 tick 运行一次\r\n    if (Game.time % 20) return\r\n\r\n    if (!Memory.stats) Memory.stats = {}\r\n\r\n\r\n    // 统计 GCL / GPL 的升级百分比和等级\r\n    Memory.stats.gcl = (Game.gcl.progress / Game.gcl.progressTotal) * 100\r\n    Memory.stats.gclLevel = Game.gcl.level\r\n    Memory.stats.gpl = (Game.gpl.progress / Game.gpl.progressTotal) * 100\r\n    Memory.stats.gplLevel = Game.gpl.level\r\n    // CPU 的当前使用量\r\n    Memory.stats.cpu = Game.cpu.getUsed()\r\n    // bucket 当前剩余量\r\n    Memory.stats.bucket = Game.cpu.bucket\r\n\r\n    if (Game.cpu.bucket > 6000) {\r\n        Game.cpu.generatePixel();\r\n    }\r\n\r\n    if (!Memory.taskList) Memory.taskList = []\r\n\r\n}","import { spawnName, tower_action, roles, body } from './global'\r\nimport './proto/creep'\r\nimport './proto/spawn'\r\nimport './proto/structures/link'\r\nimport creepList from './config.creep'\r\nimport stateScanner from './stateScanner/index'\r\n\r\n\r\nconst getName = (role) => {\r\n    return role + Game.time;\r\n}\r\n\r\nvar createCreeps = function (role, type) {\r\n    Game.spawns[spawnName].spawnCreep(body[type], role,\r\n        { memory: { role: role } });\r\n}\r\n\r\n\r\nmodule.exports.loop = function () {\r\n    // 统计全局资源使用\r\n    stateScanner()\r\n    var role = {\r\n        total: _.filter(Game.creeps),\r\n        harvester: _.filter(Game.creeps, (creep) => creep.memory.role == 'harvester' || creep.memory.role == 'harvester1' || creep.memory.role == 'harvester2'),\r\n        builder: _.filter(Game.creeps, (creep) => creep.memory.role == 'builder' || creep.memory.role == 'builder1' || creep.memory.role == 'builder2'),\r\n        upgrader: _.filter(Game.creeps, (creep) => creep.memory.role == 'upgrader' || creep.memory.role == 'upgrader1' || creep.memory.role == 'upgrader2'),\r\n        tranfer: _.filter(Game.creeps, (creep) => creep.memory.role == 'tranfer' || creep.memory.role == 'transfer1_1' || creep.memory.role == 'transfer1_2'\r\n            || creep.memory.role == 'transfer2_1' || creep.memory.role == 'transfer2_2'),\r\n        tranfer2: _.filter(Game.creeps, (creep) => creep.memory.role == 'tranfer2'),\r\n        repairer: _.filter(Game.creeps, (creep) => creep.memory.role == 'repairer')\r\n    }\r\n    for (var name in Memory.creeps) {\r\n        if (!Game.creeps[name]) {\r\n            for (let key in creepList) {\r\n                if (name === key) {\r\n                    delete Memory.creeps[name]\r\n                    Game.spawns[spawnName].addTask(name);\r\n                }\r\n            }\r\n                delete Memory.creeps[name];\r\n        }\r\n    }\r\n\r\n    Game.spawns[spawnName].work();\r\n\r\n    for (const name in Game.structures) {\r\n        const structures = Game.structures[name];\r\n        if(structures.structureType ==STRUCTURE_LINK){\r\n            structures.work();\r\n        }\r\n    }\r\n\r\n    if(Game.spawns[spawnName].hits<2500){\r\n        Game.rooms['E2S35'].controller.activateSafeMode();\r\n    }\r\n\r\n    if (role.harvester.length < 1) {\r\n        console.log('Spawning new harvester: ');\r\n        createCreeps('harvester1', 'base')\r\n    }\r\n    for (let i in roles) {\r\n        if (role[i].length < roles[i].number) {\r\n            console.log(role[i].length, 'Spawning new ', i);\r\n            createCreeps(i, roles[i].type)\r\n            break;\r\n        }\r\n    }\r\n\r\n\r\n    if (Game.spawns[spawnName].spawning) {\r\n        var spawningCreep = Game.creeps[Game.spawns[spawnName].spawning.name];\r\n        Game.spawns[spawnName].room.visual.text(\r\n            '🛠️' + spawningCreep.memory.role,\r\n            Game.spawns[spawnName].pos.x + 1,\r\n            Game.spawns[spawnName].pos.y,\r\n            { align: 'left', opacity: 0.8 });\r\n    }\r\n\r\n    tower_action()\r\n\r\n    for (const name in Game.creeps) {\r\n        const creep = Game.creeps[name];\r\n        creep.work();\r\n    }\r\n}\r\n"],"names":["harvester","roleTransfer","upgrader","builder","transfer","transfer2","transtorage","miner","transferMiner","claimer","transferN","creepConfigs"],"mappings":"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"}